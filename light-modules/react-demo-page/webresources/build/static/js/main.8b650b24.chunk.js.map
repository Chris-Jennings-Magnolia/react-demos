{"version":3,"sources":["TourDetail.js","FilterBar.js","App.js","index.js"],"names":["TourDetail","toOutput","__html","id","_this","this","tour","props","tourName","tours","find","p","imgStyle","backgroundImage","window","MAGNOLIA_BASE_URL_IMAGE","image","backgroundSize","backgroundPosition","react_default","a","createElement","className","Link","to","name","description","style","dangerouslySetInnerHTML","createMarkup","body","Component","FilterBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterTextInputChange","bind","assertThisInitialized","handleDestinationChange","handleTourTypeChange","e","onFilterTextInput","target","value","console","log","onDestinationChange","onTourTypeChange","destination","onChange","key","destinations","map","displayName","tourType","tourTypes","type","filterText","URL_BASE","MAGNOLIA_BASE_URL","About","App","serverRequest","state","loaded","MAGNOLIA_TOURS","MAGNOLIA_DESTINATIONS","MAGNOLIA_TOURTYPES","setState","results","requestConfig","auth","username","password","axios","all","get","then","spread","data","_this2","logoReactUrl","PUBLIC_URL","logoMagnoliaUrl","HashRouter","src","alt","MAGNOLIA_HEADER","MAGNOLIA_HEADER_ABSTRACT","Route","exact","path","render","App_FilterableTourList","component","_ref","match","src_TourDetail","params","FilterableTourList","_this3","handleFilterTextInput","src_FilterBar","App_TourList","TourList","_this4","isFilterMatch","_this5","isSearchMatch","toLowerCase","indexOf","isDestinationMatch","some","item","isTourTypeMatch","_this6","filteredTours","filter","length","App_Tour","Tour","renditions","link","React","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8b650b24.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass TourDetail extends Component {\n\n  createMarkup(toOutput) {\n    return {__html: toOutput};\n  }\n  render() {\n    const find = (id) => this.props.tours.find(p => p[\"@name\"] === id)\n    const tour = find(this.props.tourName)\n\n    const imgStyle = {\n      backgroundImage: 'url(' + window.MAGNOLIA_BASE_URL_IMAGE + tour.image['@link'] + ')',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    }\n\n\n    return (\n\n      <div className=\"tour-detail\">\n        <Link className=\"tour-detail-home\" to={\"/\"}>\n          &laquo; Return to<br/>\n          &nbsp; Tours List\n        </Link>\n\n        <h3>{tour.name}</h3>\n        <p>{tour.description}</p>\n\n        <div className=\"tour-detail-img\" style={imgStyle}></div>\n        <div className=\"tour-detail-body\" dangerouslySetInnerHTML={this.createMarkup(tour.body)} ></div>\n      </div>\n    )\n  }\n}\n\nexport default TourDetail;\n","import React, { Component } from 'react';\n\nclass FilterBar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleFilterTextInputChange = this.handleFilterTextInputChange.bind(this);\n    this.handleDestinationChange = this.handleDestinationChange.bind(this);\n    this.handleTourTypeChange = this.handleTourTypeChange.bind(this);\n  }\n\n  /* Call parents callbacks. */\n  handleFilterTextInputChange(e) {\n    this.props.onFilterTextInput(e.target.value);\n  }\n\n  handleDestinationChange(e) {\n    console.log(\"FilterBar:handleDestinationChange\")\n    this.props.onDestinationChange(e.target.value);\n  }\n\n  handleTourTypeChange(e) {\n    this.props.onTourTypeChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"bar-control\">\n          <label>Destination</label>\n          <select\n            value={this.props.destination}\n            onChange={this.handleDestinationChange}\n            id=\"destination\"\n            >\n            <option value='' key='all' >Anywhere</option>\n\n            {this.props.destinations.map( (destination) =>\n              <option value={destination['@id']} key={destination.displayName} >{destination.displayName}</option>\n              )}\n          </select>\n        </div>\n\n        <div className=\"bar-control\">\n          <label>Tour Type</label>\n          <select\n            value={this.props.tourType}\n            onChange={this.handleTourTypeChange}\n            id=\"TourType\"\n            >\n            <option value='' key='all' >Anything</option>\n\n            {this.props.tourTypes.map( (tourType) =>\n              <option value={tourType['@id']} key={tourType.displayName} >{tourType.displayName}</option>\n            )}\n          </select>\n        </div>\n\n        <div className=\"bar-control\">\n          <label>Search</label>\n            <input\n              type=\"text\"\n              value={this.props.filterText}\n              onChange={this.handleFilterTextInputChange}\n              id=\"search\"\n            />\n        </div>\n\n      </form>\n    );\n  }\n\n}\n\n\n\nexport default FilterBar;\n","import React, { Component } from 'react';\nimport {\n  HashRouter,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport axios from 'axios';\nimport './App.css';\n\nimport TourDetail from './TourDetail.js';\nimport FilterBar from './FilterBar.js';\n\nconst URL_BASE = window.MAGNOLIA_BASE_URL;\n//const URL_BASE = \"http://localhost:8080/magnoliaAuthor/.rest\";\nconst URL_TOURS = '/.rest/delivery/demoTours/v1/';\nconst URL_TOURTYPES = '/.rest/delivery/demoTourTypes/v1/';\nconst URL_DESTINATIONS = '/.rest/delivery/demoDestinations/v1/';\n\nconst About = () => (\n  <div>\n    <h2>About</h2>\n    <p>A React app connected to a Magnolia server.</p>\n  </div>\n)\n\nclass App extends Component {\n\n  serverRequest = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tours: [],\n      tourTypes: [],\n      destinations: [],\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    // Get data from CMS and set 'loaded=true' when complete.\n\n    if (window.MAGNOLIA_TOURS &&\n        window.MAGNOLIA_DESTINATIONS &&\n        window.MAGNOLIA_TOURTYPES\n    ){\n      // Magnolia has supplied the data directly in the page.\n      console.log(\"Has inline data.\")\n\n      _this.setState({\n        tours: window.MAGNOLIA_TOURS.results,\n        destinations: window.MAGNOLIA_DESTINATIONS.results,\n        tourTypes: window.MAGNOLIA_TOURTYPES.results,\n        loaded: true\n      });\n\n    }else{\n\n      // Headless - retrieve data via REST.\n      console.log(\"Must retrieve data.\")\n\n      // Sending superuser for demo purposes\n      // For actual project you would probably simply ensure the anonymous user in Magnolia has proper rights.\n      const requestConfig = {\n        auth: {\n          username: 'superuser',\n          password: 'superuser'\n        }\n      }\n\n      this.serverRequest =\n        axios.all([\n          axios.get(URL_BASE + URL_TOURS, requestConfig),\n          axios.get(URL_BASE + URL_TOURTYPES, requestConfig),\n          axios.get(URL_BASE + URL_DESTINATIONS, requestConfig)\n        ])\n        .then(axios.spread(function (tours, tourTypes, destinations) {\n          _this.setState({\n            tours: tours.data.results,\n            tourTypes: tourTypes.data.results,\n            destinations: destinations.data.results,\n            loaded: true\n          });\n          console.log(\"App:serverRequest: Got all files.\")\n        }))\n    }\n\n  }\n\n  componentWillUnmount() {\n    if (this.serverRequest){\n      //axios - this.serverRequest.abort();\n    }\n  }\n\n\n  render() {\n    const logoReactUrl = window.PUBLIC_URL + \"/logo.svg\"\n    const logoMagnoliaUrl = window.PUBLIC_URL + \"/logo-magnolia.svg\"\n\n    if (this.state.loaded === false){\n      return (<div>NOT LOADED.</div>)\n\n    }else{\n\n      return (\n      <HashRouter>\n        <div className=\"App\">\n\n          <div className=\"App-header\">\n            <div className=\"App-logos\">\n              <img src={logoReactUrl} className=\"App-logo\" alt=\"React Logo\" />\n              <img src={logoMagnoliaUrl} className=\"App-logo\" alt=\"Magnolia Logo\" />\n            </div>\n\n            <h3>{window.MAGNOLIA_HEADER}</h3>\n            <p>{window.MAGNOLIA_HEADER_ABSTRACT}</p>\n          </div>\n\n          <Route exact path=\"/\" render={() =>\n              <FilterableTourList\n                tours={this.state.tours}\n                destinations={this.state.destinations}\n                tourTypes={this.state.tourTypes}\n                />\n            }\n          />\n          <Route path=\"/about\" component={About}/>\n          <Route path={\"/tourDetail/:tourName\"} render={({match}) =>\n              <TourDetail tours={this.state.tours} tourName={match.params.tourName}/>\n            }\n          />\n        </div>\n\n      </HashRouter>\n    );\n  }\n  }\n}\n\n\n\n\nclass FilterableTourList extends Component {\n\n  constructor(props) {\n    console.log(\"Construct FilterableTourList\")\n\n    super(props);\n    this.state = {\n      filterText: '',\n      destination: '',\n      tourType: ''\n    };\n\n    this.handleFilterTextInput = this.handleFilterTextInput.bind(this);\n    this.handleDestinationChange = this.handleDestinationChange.bind(this);\n    this.handleTourTypeChange = this.handleTourTypeChange.bind(this);\n  }\n\n  handleFilterTextInput(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n  handleDestinationChange(destination) {\n    console.log(\"App:Dest=\" + destination)\n    this.setState({\n      destination: destination\n    });\n  }\n  handleTourTypeChange(tourType) {\n    this.setState({\n      tourType: tourType\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Find Your Tour</h1>\n\n        <FilterBar\n          destinations={this.props.destinations}\n          tourTypes={this.props.tourTypes}\n\n          filterText={this.state.filterText}\n          destination={this.state.destination}\n          tourType={this.state.tourType}\n\n          onFilterTextInput={this.handleFilterTextInput}\n          onDestinationChange={this.handleDestinationChange}\n          onTourTypeChange={this.handleTourTypeChange}\n        />\n\n      <TourList\n        tours={this.props.tours}\n        tourTypes={this.props.tourTypes}\n\n          filterText={this.state.filterText}\n          destination={this.state.destination}\n          tourType={this.state.tourType}\n        />\n      </div>\n    );\n  }\n}\n\n\nclass TourList extends Component {\n\n  constructor(props) {\n    console.log(\"Construct TourList\")\n    super(props);\n    this.isFilterMatch = this.isFilterMatch.bind(this)\n  }\n\n  isFilterMatch(tour) {\n    const isSearchMatch = (tour.name.toLowerCase().indexOf(this.props.filterText.toLowerCase()) !== -1)\n\n    const isDestinationMatch = tour.destination.some(item => item['@id'] === this.props.destination) || this.props.destination===''\n    const isTourTypeMatch = tour.tourTypes.some(item => item['@id'] === this.props.tourType) || this.props.tourType===''\n    return (isSearchMatch && isDestinationMatch && isTourTypeMatch)\n  }\n\n  render() {\n\n    const filteredTours = this.props.tours.filter(this.isFilterMatch);\n\n    return (\n      <div>\n        <div className=\"tour-count\">{filteredTours.length} matching tours.</div>\n        {filteredTours.map( (tour) =>\n          <Tour key={tour.name} tour={tour}  tourTypes={this.props.tourTypes} />\n        )}\n      </div>\n    )\n  }\n}\n\n\nclass Tour extends React.Component {\n\n  render() {\n\n    const imgStyle = {\n      backgroundImage: 'url(' + window.MAGNOLIA_BASE_URL_IMAGE + this.props.tour.image.renditions['320x240'].link + ')',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    }\n\n    return (\n      <div className=\"App-tour\">\n        <Link to={\"tourDetail/\" + this.props.tour[\"@name\"]}>\n          <div className=\"App-tour-img\" style={imgStyle}>\n          <div className=\"App-tour-text\">{this.props.tour.name}</div>\n          </div>\n        </Link>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}